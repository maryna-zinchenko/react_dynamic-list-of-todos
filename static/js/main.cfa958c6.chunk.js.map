{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","inputTittle","selectTodos","filterByTitle","task","title","toLowerCase","includes","filterByStatus","completed","handleChange","event","target","name","value","setState","this","props","todos","selectUser","visibleTodos","filter","className","type","onChange","placeholder","map","todo","key","id","classNames","onClick","userId","React","Component","request","url","fetch","then","response","ok","json","Error","status","statusText","CurrentUser","user","loadData","prevProps","users","data","clearUser","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfa958c6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputTittle: '',\n    selectTodos: 'all',\n  }\n\n  filterByTitle = (task) => {\n    const { inputTittle } = this.state;\n\n    if (inputTittle) {\n      return task.title !== null\n      && task.title.toLowerCase().includes(inputTittle.toLowerCase());\n    }\n\n    return task;\n  }\n\n  filterByStatus = (task) => {\n    const { selectTodos } = this.state;\n\n    switch (selectTodos) {\n      case ('Active'):\n        return task.completed === false;\n\n      case ('Completed'):\n        return task.completed === true;\n\n      default:\n        return task;\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { inputTittle, selectTodos } = this.state;\n\n    const visibleTodos = todos\n      .filter(this.filterByTitle)\n      .filter(this.filterByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            value={inputTittle}\n            onChange={this.handleChange}\n            name=\"inputTittle\"\n            placeholder=\"Filter by title\"\n          />\n          <select\n            value={selectTodos}\n            onChange={this.handleChange}\n            name=\"selectTodos\"\n          >\n            <option name=\"\">Show Todos</option>\n            <option name=\"active\">Active</option>\n            <option name=\"completed\">Completed</option>\n            <option name=\"all\">All</option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  })}\n              >\n                <label>\n                  <input type=\"checkbox\" />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => selectUser(todo.userId)}\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    completed: bool,\n    userId: PropTypes.number,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com`;\n\nconst request = url => fetch(`${API_URL}${url}`)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(\n      `${response.status} ${response.statusText}`,\n    );\n  });\n\nexport function getTodos() {\n  return request(`/todos`);\n}\n\nexport function getUser(id) {\n  return request(`/users/${id}`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: '',\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    getUser(this.props.userId)\n      .then(users => (\n        this.setState({ user: users.data })\n      ));\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            clearUser(0);\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => (\n        this.setState({ todos: todos.data })\n      ));\n  }\n\n  clearUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={id => this.setState({ selectedUserId: id })}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}